<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
  
};

]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>test2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>test2</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[// Server script for ServiceNow widget

(function() {
    // Retrieve items based on the search keywords
    if (input && input.keywords) {
        data.items = getCatalogItems(input.keywords);
    } else {
        data.items = []; // You might want to set default items here
    }

    // Function to get catalog items based on keywords
    function getCatalogItems(keywords) {
        var catalogItems = [];

        // Create a new GlideRecord object for the 'x_1129837_happyimm_property_info' table
        var gr = new GlideRecord('x_1129837_happyimm_property_info');

        // Add an active query
        gr.addActiveQuery();

        // Customize your query based on your requirements
        // For example, searching in the 'number' field
        gr.addQuery('number', 'CONTAINS', keywords);

        // Execute the query
        gr.query();

        // Loop through the results
        while (gr.next()) {
            var item = {
                number: gr.getValue('number'),
				description: gr.getValue('description'),
				price: gr.getValue('price'),
				postal_code: gr.getValue('postal_code'),
                // Add other fields as needed
            };
            catalogItems.push(item);
        }

        return catalogItems;
    }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-20 12:30:30</sys_created_on>
        <sys_id>fd35d8e89317b9101c3a3a5efaba102c</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>test2</sys_name>
        <sys_package display_value="HappyImmo" source="x_1129837_happyimm">4dbd9096930731101c3a3a5efaba10a4</sys_package>
        <sys_policy/>
        <sys_scope display_value="HappyImmo">4dbd9096930731101c3a3a5efaba10a4</sys_scope>
        <sys_update_name>sp_widget_fd35d8e89317b9101c3a3a5efaba102c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-20 22:12:42</sys_updated_on>
        <template><![CDATA[<input class="form-control" type="search" 
       placeholder="Start typing here to search the list of catalog items" 
       ng-model="c.data.keywords" 
       ng-change="c.server.update()" 
       ng-model-options="{debounce: 250}" />

<div class="list-group result-container" ng-if="c.data.items.length > 0">
  <a href="javascript:void(0)" class="list-group-item row" ng-repeat="item in c.data.items">
    <!-- display the retrieved items from the server -->
    <!-- ... -->
     <h4>{{item.number}}</h4>
    <medium class="text-muted" style="line-height:0px">
          Description = {{item.description}}<br>
          Postal code = {{item.postal_code}}<br>
      	  Price = {{item.price}}€<br>
        </medium> 
  </a>
  
</div>
 

<!-- Display a message if no items are found -->
<div class="panel-footer" ng-if="c.data.keywords && c.data.items.length === 0"> 
  No items found for "{{c.data.keywords}}"
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="HappyImmo">4dbd9096930731101c3a3a5efaba10a4</application>
        <file_path/>
        <instance_id>45b65c1f1b4eb5d019254089bd4bcb77</instance_id>
        <instance_name>dev196055</instance_name>
        <name>sp_widget_fd35d8e89317b9101c3a3a5efaba102c</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
  
};

]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;test2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;test2&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[// Server script for ServiceNow widget

(function() {
    // Retrieve items based on the search keywords
    if (input &amp;&amp; input.keywords) {
        data.items = getCatalogItems(input.keywords);
    } else {
        data.items = []; // You might want to set default items here
    }

    // Function to get catalog items based on keywords
    function getCatalogItems(keywords) {
        var catalogItems = [];

        // Create a new GlideRecord object for the 'x_1129837_happyimm_property_info' table
        var gr = new GlideRecord('x_1129837_happyimm_property_info');

        // Add an active query
        gr.addActiveQuery();

        // Customize your query based on your requirements
        // For example, searching in the 'number' field
        gr.addQuery('number', 'CONTAINS', keywords);

        // Execute the query
        gr.query();

        // Loop through the results
        while (gr.next()) {
            var item = {
                number: gr.getValue('number'),
				description: gr.getValue('description'),
				price: gr.getValue('price'),
				postal_code: gr.getValue('postal_code'),
                // Add other fields as needed
            };
            catalogItems.push(item);
        }

        return catalogItems;
    }
})();
]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2023-12-20 12:30:30&lt;/sys_created_on&gt;&lt;sys_id&gt;fd35d8e89317b9101c3a3a5efaba102c&lt;/sys_id&gt;&lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;&lt;sys_name&gt;test2&lt;/sys_name&gt;&lt;sys_package display_value="HappyImmo" source="x_1129837_happyimm"&gt;4dbd9096930731101c3a3a5efaba10a4&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="HappyImmo"&gt;4dbd9096930731101c3a3a5efaba10a4&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_fd35d8e89317b9101c3a3a5efaba102c&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2023-12-20 22:12:42&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;input class="form-control" type="search" 
       placeholder="Start typing here to search the list of catalog items" 
       ng-model="c.data.keywords" 
       ng-change="c.server.update()" 
       ng-model-options="{debounce: 250}" /&gt;

&lt;div class="list-group result-container" ng-if="c.data.items.length &gt; 0"&gt;
  &lt;a href="javascript:void(0)" class="list-group-item row" ng-repeat="item in c.data.items"&gt;
    &lt;!-- display the retrieved items from the server --&gt;
    &lt;!-- ... --&gt;
     &lt;h4&gt;{{item.number}}&lt;/h4&gt;
    &lt;medium class="text-muted" style="line-height:0px"&gt;
          Description = {{item.description}}&lt;br&gt;
          Postal code = {{item.postal_code}}&lt;br&gt;
      	  Price = {{item.price}}€&lt;br&gt;
        &lt;/medium&gt; 
  &lt;/a&gt;
  
&lt;/div&gt;
 

&lt;!-- Display a message if no items are found --&gt;
&lt;div class="panel-footer" ng-if="c.data.keywords &amp;&amp; c.data.items.length === 0"&gt; 
  No items found for "{{c.data.keywords}}"
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-171228772</payload_hash>
        <record_name>test2</record_name>
        <reverted_from/>
        <source>41bd9096930731101c3a3a5efaba10a9</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-20 22:12:42</sys_created_on>
        <sys_id>428a12a0939fb9101c3a3a5efaba1080</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18c8949c56a0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-20 22:12:42</sys_updated_on>
        <type>Widget</type>
        <update_guid>4a8a12a05e9fb91015bb4c04ef36017f</update_guid>
        <update_guid_history>4a8a12a05e9fb91015bb4c04ef36017f:-171228772,a25a9e609e9fb9101c8ae5f14d7e31f2:-1214673029,d63a9660139fb9107391deecd845bb47:1509517307,c21a1620a89fb91032bfd692ae26854a:-1530176157,e7f91a202e9fb910e76cbfe5a4a97943:-1403548603,6bd95220aa9fb910f778e241e4ebb16e:-844313887,e4b91620f49fb910ebd8b24dd9ca5055:628479363,8c791220559fb9101e0d025364af07eb:1222669434,e51952ec1a5fb910b3fa41eca52050a2:1396628633,05a85eac875fb9107e9c1fe8b8db6641:1586795872,26489eac695fb9108c8d472207c119c1:-100994706,3aa71eacf55fb910e3a77578654bf567:-477010014,e2460aa4bd1fb91059efb8b47c130b87:876201386,51e54ea8e41fb9100ae8b42805e8ab36:1491276790,0c2bfde894dbb910fc3309cb5880fe20:876201386,a9683928ffdbb9101f8a2e4c3a1c76ac:-1066145065,6de63d28a2dbb9101247f43eef13700e:1913694394,ef16bd2828dbb9109492679f665575c1:1439385518,52c5f9e4d2dbb910e04841a6eecb5de6:-1987183781,f45535a45ddbb910f7543eb5f278a088:-1955119719,0b4439648bdbb9107f1962c30568ba94:1442845721,b28ee468a497b91000c61062441efe97:502047147,496e6468c297b9100a1979e5bcdbfc30:1944766501,3e4e24684197b910c9c61bfe35e2aad7:-1399520822,7fbda4a42e57b910d2d9ab9da40b5140:-44067755,c37d28a48357b9103fa5d55863d64292:804513845,b1a224e8d957b9104ab2fdac08450938:502047147,83ed14e44657b91078f9b05ba9f45eca:1343066570,cdbd5c247d57b91008f6d13012c2dc12:-554195411,152d54240c57b910b99e7ef9090195df:520006817,a8ccdc640e57b91056c103f77d97e329:-554195411,02bb5ce0cf57b910c34966a4d149823a:-208142041,1ae89860c657b9104e189005dcde4c6b:2125668883,e46810605d57b910c2a90744479238d9:1176817994,bd45582ce717b91068800efcf2426f42:1548157564</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="test2">442f1ee4939fb9101c3a3a5efaba1034</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-20 22:32:46</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>a0db383396c648e2a2737e69b1f65d64</sys_id>
        <sys_metadata>fd35d8e89317b9101c3a3a5efaba102c</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>test2</sys_name>
        <sys_package display_value="HappyImmo" source="x_1129837_happyimm">4dbd9096930731101c3a3a5efaba10a4</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="HappyImmo">4dbd9096930731101c3a3a5efaba10a4</sys_scope>
        <sys_scope_delete display_value="">1c3543a6040145908eb8e2564bcf0900</sys_scope_delete>
        <sys_update_name>sp_widget_fd35d8e89317b9101c3a3a5efaba102c</sys_update_name>
        <sys_update_version display_value="sp_widget_fd35d8e89317b9101c3a3a5efaba102c">428a12a0939fb9101c3a3a5efaba1080</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-20 22:32:46</sys_updated_on>
    </sys_metadata_delete>
</record_update>
